// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubmissionArbitraryForm.Data;

#nullable disable

namespace SubmissionArbitraryForm.Data.Migrations
{
    [DbContext(typeof(SubmissionsDbContext))]
    [Migration("20250401050826_InitialCreateTablesSubmissionsForms")]
    partial class InitialCreateTablesSubmissionsForms
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.FormField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FieldType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SubmissionId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("FormFields");

                    b.HasDiscriminator<string>("FieldType").HasValue("FormField");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.Submission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.Fields.CheckboxField", b =>
                {
                    b.HasBaseType("SubmissionArbitraryForm.Domain.FormField");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Checkbox");
                });

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.Fields.DateField", b =>
                {
                    b.HasBaseType("SubmissionArbitraryForm.Domain.FormField");

                    b.Property<DateTime>("Value")
                        .HasColumnType("TEXT");

                    b.ToTable("FormFields", t =>
                        {
                            t.Property("Value")
                                .HasColumnName("DateField_Value");
                        });

                    b.HasDiscriminator().HasValue("Date");
                });

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.Fields.DropdownField", b =>
                {
                    b.HasBaseType("SubmissionArbitraryForm.Domain.FormField");

                    b.Property<string>("SelectedOption")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("FormFields", t =>
                        {
                            t.Property("SelectedOption")
                                .HasColumnName("DropdownField_SelectedOption");
                        });

                    b.HasDiscriminator().HasValue("Dropdown");
                });

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.Fields.RadioField", b =>
                {
                    b.HasBaseType("SubmissionArbitraryForm.Domain.FormField");

                    b.Property<string>("SelectedOption")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Radio");
                });

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.Fields.TextField", b =>
                {
                    b.HasBaseType("SubmissionArbitraryForm.Domain.FormField");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Text");
                });

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.FormField", b =>
                {
                    b.HasOne("SubmissionArbitraryForm.Domain.Submission", null)
                        .WithMany("Fields")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SubmissionArbitraryForm.Domain.Submission", b =>
                {
                    b.Navigation("Fields");
                });
#pragma warning restore 612, 618
        }
    }
}
